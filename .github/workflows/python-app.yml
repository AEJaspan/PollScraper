# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@main
    - name: Set up Python 3.7.17
      uses: actions/setup-python@v3
      with:
        python-version: "3.7.17"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi
        python setup.py install
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # make lint
    - name: Test 
      run: |
        python setup.py test
        flake8 pollscraper tests
        make test
        pytest

    - name: MakeDocs
      run: |
        make docs
      # make servedocs

    - name: Scrape Polls
      run: |
        pollscraper --debug 10 --url https://cdn-dev.economistdatateam.com/jobs/pds/code-test/index.html --results_dir data/

    - name: Create temp artifact folder
      run: mkdir downloads
      
    - name: Add artifacts to be published
      run: |
        cp data/polls.csv downloads/
        cp data/trends.csv downloads/
  
    - name: Upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with: 
        name: assets-for-download
        path: downloads
